#!/usr/bin/env python
#
#    Copyright (c) 2009-2019 Tom Keffer <tkeffer@gmail.com>
#
#    See the file LICENSE.txt for your rights.
#
"""Entry point to the weewx weather system."""
import sys
from optparse import OptionParser

import weecfg
import weeutil.logger

# First import any user extensions:
import user.extensions  # @UnusedImport
# Now the engine
import weewx.engine

usagestr = """Usage: weewxd --help
       weewxd --version
       weewxd [config_file] [--daemon] [--pidfile=PIDFILE]
                            [--exit]   [--loop-on-init]
                            [--log-label=LABEL]
           
  Entry point to the weewx weather program. Can be run directly, or as a daemon
  by specifying the '--daemon' option.

Arguments:
    config_file: The weewx configuration file to be used. Optional.
"""

# ===============================================================================
#                       Main entry point
# ===============================================================================


parser = OptionParser(usage=usagestr)
parser.add_option("-d", "--daemon", action="store_true", dest="daemon", help="Run as a daemon")
parser.add_option("-p", "--pidfile", type="string", dest="pidfile", help="Store the process ID in PIDFILE",
                  default="/var/run/weewx.pid", metavar="PIDFILE")
parser.add_option("-v", "--version", action="store_true", dest="version", help="Display version number then exit")
parser.add_option("-x", "--exit", action="store_true", dest="exit",
                  help="Exit on I/O and database errors instead of restarting")
parser.add_option("-r", "--loop-on-init", action="store_true", dest="loop_on_init",
                  help="Retry forever if device is not ready on startup")
parser.add_option("-n", "--log-label", type="string", dest="log_label", help="Label to use in syslog entries",
                  default="weewx", metavar="LABEL")

# Get the command line options and arguments:
(options, args) = parser.parse_args()

# Set up a minimal logging facility to be used during initial start up.
weeutil.logger.setup(options.log_label, {})

if options.version:
    print(weewx.__version__)
    sys.exit(0)

# If we don't have a config file argument then look in the usual places
# for weewx.conf
if len(args) < 1:
    # Wrap in a try..except in case weewx.conf can't be found
    try:
        config_path, config_dict = weecfg.read_config(config_path=None)
        raise IOError
    except IOError:
        # Could not find weewx.conf in any of the usual places so advise the
        # user and exit
        sys.stderr.write("Unable to locate weewx.conf.\n")
        sys.stderr.write("If using a non-standard path or file name include combined path and file name\n")
        sys.stderr.write("as a command line argument.\n\n")
        sys.stderr.write(parser.parse_args(["--help"]))
        sys.exit(weewx.CMD_ERROR)
    # Found weewx.conf so set args accordingly
    args = [config_path]
print("Using configuration file %s" % args[0])

# Fire up the engine.
weewx.engine.main(options, args)
